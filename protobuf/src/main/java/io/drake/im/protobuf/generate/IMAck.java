// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Ack.proto

package io.drake.im.protobuf.generate;

public final class IMAck {
  private IMAck() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AckOrBuilder extends
      // @@protoc_insertion_point(interface_extends:message.Ack)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string originId = 1;</code>
     * @return Whether the originId field is set.
     */
    boolean hasOriginId();
    /**
     * <code>optional string originId = 1;</code>
     * @return The originId.
     */
    String getOriginId();
    /**
     * <code>optional string originId = 1;</code>
     * @return The bytes for originId.
     */
    com.google.protobuf.ByteString
        getOriginIdBytes();

    /**
     * <code>optional string destId = 2;</code>
     * @return Whether the destId field is set.
     */
    boolean hasDestId();
    /**
     * <code>optional string destId = 2;</code>
     * @return The destId.
     */
    String getDestId();
    /**
     * <code>optional string destId = 2;</code>
     * @return The bytes for destId.
     */
    com.google.protobuf.ByteString
        getDestIdBytes();

    /**
     * <code>optional .message.Ack.DestType destType = 3;</code>
     * @return Whether the destType field is set.
     */
    boolean hasDestType();
    /**
     * <code>optional .message.Ack.DestType destType = 3;</code>
     * @return The destType.
     */
    Ack.DestType getDestType();

    /**
     * <code>optional .message.Ack.AckType ackType = 4;</code>
     * @return Whether the ackType field is set.
     */
    boolean hasAckType();
    /**
     * <code>optional .message.Ack.AckType ackType = 4;</code>
     * @return The ackType.
     */
    Ack.AckType getAckType();

    /**
     * <code>optional int64 ackId = 5;</code>
     * @return Whether the ackId field is set.
     */
    boolean hasAckId();
    /**
     * <code>optional int64 ackId = 5;</code>
     * @return The ackId.
     */
    long getAckId();

    /**
     * <code>optional string extend = 6;</code>
     * @return Whether the extend field is set.
     */
    boolean hasExtend();
    /**
     * <code>optional string extend = 6;</code>
     * @return The extend.
     */
    String getExtend();
    /**
     * <code>optional string extend = 6;</code>
     * @return The bytes for extend.
     */
    com.google.protobuf.ByteString
        getExtendBytes();

    /**
     * <code>optional int64 createTime = 7;</code>
     * @return Whether the createTime field is set.
     */
    boolean hasCreateTime();
    /**
     * <code>optional int64 createTime = 7;</code>
     * @return The createTime.
     */
    long getCreateTime();
  }
  /**
   * Protobuf type {@code message.Ack}
   */
  public static final class Ack extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:message.Ack)
      AckOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Ack.newBuilder() to construct.
    private Ack(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Ack() {
      originId_ = "";
      destId_ = "";
      destType_ = 0;
      ackType_ = 0;
      extend_ = "";
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Ack();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Ack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              originId_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              destId_ = bs;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              DestType value = DestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                destType_ = rawValue;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              AckType value = AckType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                ackType_ = rawValue;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ackId_ = input.readInt64();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              extend_ = bs;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              createTime_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return IMAck.internal_static_message_Ack_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return IMAck.internal_static_message_Ack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Ack.class, Builder.class);
    }

    /**
     * Protobuf enum {@code message.Ack.DestType}
     */
    public enum DestType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SINGLE = 0;</code>
       */
      SINGLE(0),
      /**
       * <code>GROUP = 1;</code>
       */
      GROUP(1),
      ;

      /**
       * <code>SINGLE = 0;</code>
       */
      public static final int SINGLE_VALUE = 0;
      /**
       * <code>GROUP = 1;</code>
       */
      public static final int GROUP_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static DestType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static DestType forNumber(int value) {
        switch (value) {
          case 0: return SINGLE;
          case 1: return GROUP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DestType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DestType>() {
              public DestType findValueByNumber(int number) {
                return DestType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Ack.getDescriptor().getEnumTypes().get(0);
      }

      private static final DestType[] VALUES = values();

      public static DestType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DestType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:message.Ack.DestType)
    }

    /**
     * Protobuf enum {@code message.Ack.AckType}
     */
    public enum AckType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DELIVERED = 0;</code>
       */
      DELIVERED(0),
      /**
       * <code>READ = 1;</code>
       */
      READ(1),
      ;

      /**
       * <code>DELIVERED = 0;</code>
       */
      public static final int DELIVERED_VALUE = 0;
      /**
       * <code>READ = 1;</code>
       */
      public static final int READ_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static AckType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static AckType forNumber(int value) {
        switch (value) {
          case 0: return DELIVERED;
          case 1: return READ;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AckType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          AckType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AckType>() {
              public AckType findValueByNumber(int number) {
                return AckType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Ack.getDescriptor().getEnumTypes().get(1);
      }

      private static final AckType[] VALUES = values();

      public static AckType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private AckType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:message.Ack.AckType)
    }

    private int bitField0_;
    public static final int ORIGINID_FIELD_NUMBER = 1;
    private volatile Object originId_;
    /**
     * <code>optional string originId = 1;</code>
     * @return Whether the originId field is set.
     */
    @Override
    public boolean hasOriginId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string originId = 1;</code>
     * @return The originId.
     */
    @Override
    public String getOriginId() {
      Object ref = originId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          originId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string originId = 1;</code>
     * @return The bytes for originId.
     */
    @Override
    public com.google.protobuf.ByteString
        getOriginIdBytes() {
      Object ref = originId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        originId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESTID_FIELD_NUMBER = 2;
    private volatile Object destId_;
    /**
     * <code>optional string destId = 2;</code>
     * @return Whether the destId field is set.
     */
    @Override
    public boolean hasDestId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string destId = 2;</code>
     * @return The destId.
     */
    @Override
    public String getDestId() {
      Object ref = destId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          destId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string destId = 2;</code>
     * @return The bytes for destId.
     */
    @Override
    public com.google.protobuf.ByteString
        getDestIdBytes() {
      Object ref = destId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        destId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESTTYPE_FIELD_NUMBER = 3;
    private int destType_;
    /**
     * <code>optional .message.Ack.DestType destType = 3;</code>
     * @return Whether the destType field is set.
     */
    @Override public boolean hasDestType() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .message.Ack.DestType destType = 3;</code>
     * @return The destType.
     */
    @Override public DestType getDestType() {
      @SuppressWarnings("deprecation")
      DestType result = DestType.valueOf(destType_);
      return result == null ? DestType.SINGLE : result;
    }

    public static final int ACKTYPE_FIELD_NUMBER = 4;
    private int ackType_;
    /**
     * <code>optional .message.Ack.AckType ackType = 4;</code>
     * @return Whether the ackType field is set.
     */
    @Override public boolean hasAckType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .message.Ack.AckType ackType = 4;</code>
     * @return The ackType.
     */
    @Override public AckType getAckType() {
      @SuppressWarnings("deprecation")
      AckType result = AckType.valueOf(ackType_);
      return result == null ? AckType.DELIVERED : result;
    }

    public static final int ACKID_FIELD_NUMBER = 5;
    private long ackId_;
    /**
     * <code>optional int64 ackId = 5;</code>
     * @return Whether the ackId field is set.
     */
    @Override
    public boolean hasAckId() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int64 ackId = 5;</code>
     * @return The ackId.
     */
    @Override
    public long getAckId() {
      return ackId_;
    }

    public static final int EXTEND_FIELD_NUMBER = 6;
    private volatile Object extend_;
    /**
     * <code>optional string extend = 6;</code>
     * @return Whether the extend field is set.
     */
    @Override
    public boolean hasExtend() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional string extend = 6;</code>
     * @return The extend.
     */
    @Override
    public String getExtend() {
      Object ref = extend_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          extend_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string extend = 6;</code>
     * @return The bytes for extend.
     */
    @Override
    public com.google.protobuf.ByteString
        getExtendBytes() {
      Object ref = extend_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        extend_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CREATETIME_FIELD_NUMBER = 7;
    private long createTime_;
    /**
     * <code>optional int64 createTime = 7;</code>
     * @return Whether the createTime field is set.
     */
    @Override
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional int64 createTime = 7;</code>
     * @return The createTime.
     */
    @Override
    public long getCreateTime() {
      return createTime_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, originId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, destId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(3, destType_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(4, ackType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt64(5, ackId_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, extend_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt64(7, createTime_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, originId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, destId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, destType_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, ackType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, ackId_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, extend_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, createTime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Ack)) {
        return super.equals(obj);
      }
      Ack other = (Ack) obj;

      if (hasOriginId() != other.hasOriginId()) return false;
      if (hasOriginId()) {
        if (!getOriginId()
            .equals(other.getOriginId())) return false;
      }
      if (hasDestId() != other.hasDestId()) return false;
      if (hasDestId()) {
        if (!getDestId()
            .equals(other.getDestId())) return false;
      }
      if (hasDestType() != other.hasDestType()) return false;
      if (hasDestType()) {
        if (destType_ != other.destType_) return false;
      }
      if (hasAckType() != other.hasAckType()) return false;
      if (hasAckType()) {
        if (ackType_ != other.ackType_) return false;
      }
      if (hasAckId() != other.hasAckId()) return false;
      if (hasAckId()) {
        if (getAckId()
            != other.getAckId()) return false;
      }
      if (hasExtend() != other.hasExtend()) return false;
      if (hasExtend()) {
        if (!getExtend()
            .equals(other.getExtend())) return false;
      }
      if (hasCreateTime() != other.hasCreateTime()) return false;
      if (hasCreateTime()) {
        if (getCreateTime()
            != other.getCreateTime()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOriginId()) {
        hash = (37 * hash) + ORIGINID_FIELD_NUMBER;
        hash = (53 * hash) + getOriginId().hashCode();
      }
      if (hasDestId()) {
        hash = (37 * hash) + DESTID_FIELD_NUMBER;
        hash = (53 * hash) + getDestId().hashCode();
      }
      if (hasDestType()) {
        hash = (37 * hash) + DESTTYPE_FIELD_NUMBER;
        hash = (53 * hash) + destType_;
      }
      if (hasAckType()) {
        hash = (37 * hash) + ACKTYPE_FIELD_NUMBER;
        hash = (53 * hash) + ackType_;
      }
      if (hasAckId()) {
        hash = (37 * hash) + ACKID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAckId());
      }
      if (hasExtend()) {
        hash = (37 * hash) + EXTEND_FIELD_NUMBER;
        hash = (53 * hash) + getExtend().hashCode();
      }
      if (hasCreateTime()) {
        hash = (37 * hash) + CREATETIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCreateTime());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Ack parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Ack parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Ack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Ack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Ack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Ack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Ack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Ack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Ack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Ack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Ack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Ack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Ack prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code message.Ack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:message.Ack)
        AckOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return IMAck.internal_static_message_Ack_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return IMAck.internal_static_message_Ack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Ack.class, Builder.class);
      }

      // Construct using io.drake.im.protobuf.generate.IMAck.Ack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        originId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        destId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        destType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        ackType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ackId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        extend_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return IMAck.internal_static_message_Ack_descriptor;
      }

      @Override
      public Ack getDefaultInstanceForType() {
        return Ack.getDefaultInstance();
      }

      @Override
      public Ack build() {
        Ack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Ack buildPartial() {
        Ack result = new Ack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.originId_ = originId_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.destId_ = destId_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.destType_ = destType_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ackType_ = ackType_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.ackId_ = ackId_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.extend_ = extend_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.createTime_ = createTime_;
          to_bitField0_ |= 0x00000040;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Ack) {
          return mergeFrom((Ack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Ack other) {
        if (other == Ack.getDefaultInstance()) return this;
        if (other.hasOriginId()) {
          bitField0_ |= 0x00000001;
          originId_ = other.originId_;
          onChanged();
        }
        if (other.hasDestId()) {
          bitField0_ |= 0x00000002;
          destId_ = other.destId_;
          onChanged();
        }
        if (other.hasDestType()) {
          setDestType(other.getDestType());
        }
        if (other.hasAckType()) {
          setAckType(other.getAckType());
        }
        if (other.hasAckId()) {
          setAckId(other.getAckId());
        }
        if (other.hasExtend()) {
          bitField0_ |= 0x00000020;
          extend_ = other.extend_;
          onChanged();
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Ack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Ack) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private Object originId_ = "";
      /**
       * <code>optional string originId = 1;</code>
       * @return Whether the originId field is set.
       */
      public boolean hasOriginId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string originId = 1;</code>
       * @return The originId.
       */
      public String getOriginId() {
        Object ref = originId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            originId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string originId = 1;</code>
       * @return The bytes for originId.
       */
      public com.google.protobuf.ByteString
          getOriginIdBytes() {
        Object ref = originId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          originId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string originId = 1;</code>
       * @param value The originId to set.
       * @return This builder for chaining.
       */
      public Builder setOriginId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        originId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string originId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOriginId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        originId_ = getDefaultInstance().getOriginId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string originId = 1;</code>
       * @param value The bytes for originId to set.
       * @return This builder for chaining.
       */
      public Builder setOriginIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        originId_ = value;
        onChanged();
        return this;
      }

      private Object destId_ = "";
      /**
       * <code>optional string destId = 2;</code>
       * @return Whether the destId field is set.
       */
      public boolean hasDestId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string destId = 2;</code>
       * @return The destId.
       */
      public String getDestId() {
        Object ref = destId_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            destId_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string destId = 2;</code>
       * @return The bytes for destId.
       */
      public com.google.protobuf.ByteString
          getDestIdBytes() {
        Object ref = destId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          destId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string destId = 2;</code>
       * @param value The destId to set.
       * @return This builder for chaining.
       */
      public Builder setDestId(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        destId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string destId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDestId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        destId_ = getDefaultInstance().getDestId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string destId = 2;</code>
       * @param value The bytes for destId to set.
       * @return This builder for chaining.
       */
      public Builder setDestIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        destId_ = value;
        onChanged();
        return this;
      }

      private int destType_ = 0;
      /**
       * <code>optional .message.Ack.DestType destType = 3;</code>
       * @return Whether the destType field is set.
       */
      @Override public boolean hasDestType() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .message.Ack.DestType destType = 3;</code>
       * @return The destType.
       */
      @Override
      public DestType getDestType() {
        @SuppressWarnings("deprecation")
        DestType result = DestType.valueOf(destType_);
        return result == null ? DestType.SINGLE : result;
      }
      /**
       * <code>optional .message.Ack.DestType destType = 3;</code>
       * @param value The destType to set.
       * @return This builder for chaining.
       */
      public Builder setDestType(DestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        destType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .message.Ack.DestType destType = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDestType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        destType_ = 0;
        onChanged();
        return this;
      }

      private int ackType_ = 0;
      /**
       * <code>optional .message.Ack.AckType ackType = 4;</code>
       * @return Whether the ackType field is set.
       */
      @Override public boolean hasAckType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .message.Ack.AckType ackType = 4;</code>
       * @return The ackType.
       */
      @Override
      public AckType getAckType() {
        @SuppressWarnings("deprecation")
        AckType result = AckType.valueOf(ackType_);
        return result == null ? AckType.DELIVERED : result;
      }
      /**
       * <code>optional .message.Ack.AckType ackType = 4;</code>
       * @param value The ackType to set.
       * @return This builder for chaining.
       */
      public Builder setAckType(AckType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        ackType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .message.Ack.AckType ackType = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAckType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ackType_ = 0;
        onChanged();
        return this;
      }

      private long ackId_ ;
      /**
       * <code>optional int64 ackId = 5;</code>
       * @return Whether the ackId field is set.
       */
      @Override
      public boolean hasAckId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int64 ackId = 5;</code>
       * @return The ackId.
       */
      @Override
      public long getAckId() {
        return ackId_;
      }
      /**
       * <code>optional int64 ackId = 5;</code>
       * @param value The ackId to set.
       * @return This builder for chaining.
       */
      public Builder setAckId(long value) {
        bitField0_ |= 0x00000010;
        ackId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 ackId = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAckId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ackId_ = 0L;
        onChanged();
        return this;
      }

      private Object extend_ = "";
      /**
       * <code>optional string extend = 6;</code>
       * @return Whether the extend field is set.
       */
      public boolean hasExtend() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional string extend = 6;</code>
       * @return The extend.
       */
      public String getExtend() {
        Object ref = extend_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            extend_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>optional string extend = 6;</code>
       * @return The bytes for extend.
       */
      public com.google.protobuf.ByteString
          getExtendBytes() {
        Object ref = extend_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          extend_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string extend = 6;</code>
       * @param value The extend to set.
       * @return This builder for chaining.
       */
      public Builder setExtend(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        extend_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string extend = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearExtend() {
        bitField0_ = (bitField0_ & ~0x00000020);
        extend_ = getDefaultInstance().getExtend();
        onChanged();
        return this;
      }
      /**
       * <code>optional string extend = 6;</code>
       * @param value The bytes for extend to set.
       * @return This builder for chaining.
       */
      public Builder setExtendBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        extend_ = value;
        onChanged();
        return this;
      }

      private long createTime_ ;
      /**
       * <code>optional int64 createTime = 7;</code>
       * @return Whether the createTime field is set.
       */
      @Override
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional int64 createTime = 7;</code>
       * @return The createTime.
       */
      @Override
      public long getCreateTime() {
        return createTime_;
      }
      /**
       * <code>optional int64 createTime = 7;</code>
       * @param value The createTime to set.
       * @return This builder for chaining.
       */
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00000040;
        createTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 createTime = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        createTime_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:message.Ack)
    }

    // @@protoc_insertion_point(class_scope:message.Ack)
    private static final Ack DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Ack();
    }

    public static Ack getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<Ack>
        PARSER = new com.google.protobuf.AbstractParser<Ack>() {
      @Override
      public Ack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ack(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Ack> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Ack> getParserForType() {
      return PARSER;
    }

    @Override
    public Ack getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_message_Ack_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_message_Ack_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\tAck.proto\022\007message\"\361\001\n\003Ack\022\020\n\010originId" +
      "\030\001 \001(\t\022\016\n\006destId\030\002 \001(\t\022\'\n\010destType\030\003 \001(\016" +
      "2\025.message.Ack.DestType\022%\n\007ackType\030\004 \001(\016" +
      "2\024.message.Ack.AckType\022\r\n\005ackId\030\005 \001(\003\022\016\n" +
      "\006extend\030\006 \001(\t\022\022\n\ncreateTime\030\007 \001(\003\"!\n\010Des" +
      "tType\022\n\n\006SINGLE\020\000\022\t\n\005GROUP\020\001\"\"\n\007AckType\022" +
      "\r\n\tDELIVERED\020\000\022\010\n\004READ\020\001B&\n\035io.drake.im." +
      "protobuf.generateB\005IMAck"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_message_Ack_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_message_Ack_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_message_Ack_descriptor,
        new String[] { "OriginId", "DestId", "DestType", "AckType", "AckId", "Extend", "CreateTime", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
